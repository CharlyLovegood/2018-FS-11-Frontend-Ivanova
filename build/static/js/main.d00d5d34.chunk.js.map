{"version":3,"sources":["components/Input/Input.module.css","components/Layout/Layout.module.css","components/Tasks/Tasks.module.css","components/Tasks/Task/Task.module.css","hoc/Aux/Aux.js","components/Header/Header.js","components/Layout/Layout.js","components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Tasks/TaskPage/TaskPage.js","containers/ToDoContainer/ToDoContainer.js","components/Input/Input.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/message.js","containers/Auth/Auth.js","components/Message/Message.js","containers/MessageList/MessageList.js","store/actions/users.js","components/Messageform/Messageform.js","containers/AddMessage/AddMessage.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/users.js","index.js"],"names":["module","exports","Input","Label","InputElement","Invalid","Content","TaskList","TaskContainer","aux","props","children","header","react_default","a","createElement","Link","to","layout","_ref","Aux","Header","className","classes","withRouter","task","changeTaskStatus","match","id","onChange","type","value","isFinished","htmlFor","text","concat","path","tasks","console","log","taskList","map","Task","key","taskPage","params","ToDoContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","createTasks","modifiedTasksId","findIndex","item","toConsumableArray","setState","_this2","Tasks","Route","exact","component","TaskPage","Array","fill","index","Component","input","inputElement","inputElementClasses","invalid","touched","push","elementType","assign","join","changed","elementConfig","placeholder","label","axios","interceptors","response","use","error","Promise","resolve","data","token","status","statusText","config","authSuccess","nextMessageId","Auth","loginForm","login","valid","validation","isRequired","minLength","password","handleFormConfirm","event","preventDefault","result","keys","reduce","res","onAuth","checkValidity","rule","isValid","trim","length","handleInput","newFormData","objectSpread","inputData","target","some","inputs","element","redirect","Redirect","onSubmit","disabled","connect","auth","dispatch","request","Request","method","headers","Access-Control-Allow-Origin","fetch","then","post","localStorage","setItem","catch","actions","message","author","src","url","MessageList","user","json","req","currentUser","name","usr","userName","msg","messages","Message","userId","isAuthorized","payload","messageForm","handleChange","handleSubmit","onClick","alt","style","display","handleFileUpload","handleGeoposition","AddMessage","file","fileReader","FileReader","reject","onload","e","dataURI","onerror","readAsDataURL","reader","files","Date","toDateString","extension","split","pop","toLowerCase","readFile","resultic","_this3","fileUpload","alert","navigator","geolocation","getCurrentPosition","opts","_this4","geoposition","coords","latitude","_this5","Messageform","filename","About","App","Switch","BrowserRouter","Layout","containers_MessageList_MessageList","containers_AddMessage_AddMessage","checkToken","getItem","Boolean","window","location","hostname","initialState","loading","reducer","arguments","undefined","action","authStart","authFail","users","rootReducer","combineReducers","authReducer","messageReducer","usersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d00d5d34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2xMlR\",\"Label\":\"Input_Label__3l4yv\",\"InputElement\":\"Input_InputElement__1y8UJ\",\"Invalid\":\"Input_Invalid__212nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__HjMgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"Tasks_TaskList__2xUbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskContainer\":\"Task_TaskContainer__12xRn\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst header = () => (\n  <ul>\n    <li>\n      <Link to=''>Главная</Link>\n    </li>\n    <li>\n      <Link to='/task'>Задачи</Link>\n    </li>\n    <li>\n      <Link to='/about'>О компании</Link>\n    </li>\n    <li>\n      <Link to='/login'>Войти</Link>\n    </li>\n  </ul>\n);\n\nexport default header;","import React from 'react';\nimport Aux from '../../hoc/Aux/Aux'\nimport classes from './Layout.module.css';\nimport Header from './../Header/Header'\n\nconst layout = ({children}) => (\n  <Aux>\n    <Header />\n    <main className={classes.Content}>\n      {children}\n    </main>\n  </Aux>\n);\nexport default layout;","import React from 'react';\nimport classes from './Task.module.css';\nimport { Link, withRouter } from 'react-router-dom'\n\nconst task = ({task, changeTaskStatus, match}) => {\n  return (\n    <div className={classes.TaskContainer}>\n      <input id={task.id} onChange={changeTaskStatus} type='checkbox' value={task.isFinished}/>\n      <label htmlFor={task.id}><div>{task.text}</div></label>\n      <Link to={`${match.path}/${task.id}`}>К задаче</Link>\n    </div>\n  )\n};\n\nexport default withRouter(task);","import React from 'react';\nimport classes from './Tasks.module.css';\nimport Task from './Task/Task'\n\nconst tasks = (props) => {\n  console.log(props);\n  let taskList = props.tasks.map(task => {\n      return (\n        <Task key={task.id} task={task} changeTaskStatus={() => props.changeTaskStatus(task.id, task)}/>\n      )\n    }\n  );\n  return (\n    <div className={classes.TaskList}>\n      {taskList}\n    </div>\n  )\n};\n\nexport default tasks;","import React from 'react';\n\nconst taskPage = (props) => (\n  <div>ID задачи - {props.match.params.id}</div>\n);\n\nexport default taskPage;","import React, { Component } from 'react';\nimport Tasks from '../../components/Tasks/Tasks'\nimport { Route } from 'react-router-dom';\nimport TaskPage from '../../components/Tasks/TaskPage/TaskPage';\nimport { Redirect } from 'react-router-dom';\nclass ToDoContainer extends Component {\n  state = {\n    tasks: ToDoContainer.createTasks()\n  };\n\n  constructor(props) {\n    super(props)\n  }\n\n  static createTasks() {\n    return new Array(15).fill(null).map((item, index) => {\n      return {\n        id: index,\n        isFinished: false,\n        text: `Новая задача ${index}`\n      }\n    })\n  };\n\n  changeTaskStatus = (id) => {\n    const modifiedTasksId = this.state.tasks.findIndex(item => {\n      return item.id === id;\n    });\n    const tasks = [...this.state.tasks];\n\n    tasks[modifiedTasksId].isFinished= !tasks[modifiedTasksId].isFinished;\n\n    this.setState({\n      tasks\n    });\n\n    console.log(tasks);\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <Tasks tasks={this.state.tasks} changeTaskStatus={(id, task) => this.changeTaskStatus(id, task)}/>\n        <Route path='/task/:id' exact component={TaskPage} />\n      </div>\n    )\n  }\n}\nexport default ToDoContainer;","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n  let inputElement;\n  let inputElementClasses = [classes.InputElement];\n\n  if(props.invalid && props.touched) {\n    inputElementClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = <input\n        className={inputElementClasses.join(' ')}\n        value={props.value}\n        onChange={props.changed}\n        {...props.elementConfig}\n      />;\n      break;\n    case 'textarea':\n      inputElement = <textarea placeholder={props.placeholder}>\n      </textarea>;\n      break;\n    default:\n      inputElement = <input\n        className={inputElementClasses.join(' ')}\n        value={props.value}\n        onChange={props.changed}\n        {...props.elementConfig}\n      />;\n      break;\n  }\n  return (\n    <div className={classes.Input}>\n      <div className={classes.Label}> {props.label} </div>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\naxios.interceptors.response.use((response) => {\n  return response;\n}, (error) => {\n  return Promise.resolve({\n    data: {\n      token: 'sdfsdfsef34234wefsdf234',\n    },\n    status: 200,\n    statusText: 'Ok',\n    header: {},\n    config: error.config\n  })\n});\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token\n  }\n};\n\nexport const authFailed = (err) => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: err,\n  }\n};\n\nexport const auth = (login, password) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    var request = new Request('http://127.0.0.1:5000/', {\n        method: 'GET', \n        headers: {\n        'Access-Control-Allow-Origin':'*'\n      },\n    });\n\n    fetch(request)\n        .then(response => console.log(response))\n        \n\n    axios.post('/auth', {login, password})\n      .then(response => {\n        console.log(response);\n        localStorage.setItem('token', response.data.token);\n        dispatch(authSuccess(response.data.token));\n      })\n      .catch(error => {\n        dispatch(authFailed(error));\n      })\n  }\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    if(token) {\n      dispatch(authSuccess(token));\n    }\n  }\n};","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\n\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED'\n\nexport const ADD_USER = 'ADD_USER'\nexport const USERS_LIST = 'USERS_LIST'\nexport const CURRENT_USER = 'CURRENT_USER'\n\nexport const CHAT_LIST = 'CHAT_LIST'\n\n","import * as types from './actionTypes'\n\nlet nextMessageId = 0\n\n\nexport const addMessage = (message, author, filename, url) => ({\n  type: types.ADD_MESSAGE,\n  payload: {\n    id: nextMessageId++,\n    message,\n    author,\n    filename,\n    url,\n  }\n})\n\nexport const messageReceived = (message, author, filename, url) => ({\n  type: types.MESSAGE_RECEIVED,\n  payload: {\n    id: nextMessageId++,\n    message,\n    author,\n    filename,\n    url\n  }\n})","import React, { Component } from 'react';\nimport Input from './../../components/Input/Input';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\n\nclass Auth extends Component {\n  state = {\n    loginForm: {\n      login: {\n        label: 'Введите логин',\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Логин'\n        },\n        value: '',\n        valid: false,\n        touched: false,\n        validation: {\n          isRequired: true,\n          minLength: 6,\n        }\n      },\n      password: {\n        elementType: 'input',\n        value: '',\n        label: 'Введите пароль',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Пароль'\n        },\n        touched: false,\n        valid: false,\n        validation: {\n          isRequired: true,\n        }\n      }\n    },\n    valid: false,\n  };\n\n  handleFormConfirm = (event) => {\n    event.preventDefault();\n    const result = Object\n      .keys(this.state.loginForm)\n      .reduce((res, key) => {\n        res[key] = this.state.loginForm[key].value;\n        return res\n      }, {});\n    console.log(result);\n    this.props.onAuth(result.login, result.password);\n  };\n\n  checkValidity = (value, rule) => {\n    let isValid = true;\n    if (rule.isRequired) {\n      isValid = value.trim()!== '';\n    }\n    if (rule.minLength) {\n      isValid = value.trim().length >= rule.minLength && isValid;\n    }\n    return isValid;\n  };\n\n  handleInput = (event, key) => {\n    const newFormData = {\n      ...this.state.loginForm\n    };\n    const inputData = {\n      ...this.state.loginForm[key],\n    };\n\n    inputData.touched = true;\n    inputData.value = event.target.value;\n    inputData.valid = this.checkValidity(inputData.value, inputData.validation);\n\n    const invalid = Object.keys(newFormData).some(key => {\n        return !newFormData[key].valid;\n    });\n\n    newFormData[key] = inputData;\n    this.setState({\n      loginForm: newFormData,\n      valid: !invalid,\n    });\n  };\n\n  render() {\n    const inputs = Object\n      .keys(this.state.loginForm)\n      .map(key => {\n        const element = this.state.loginForm[key];\n        return <Input\n          key={key}\n          elementType={element.elementType}\n          elementConfig={element.elementConfig}\n          value={element.value}\n          valid={element.valid}\n          label={element.label}\n          touched={element.touched}\n          invalid={!element.valid}\n          changed={(event) => this.handleInput(event, key)}\n          />\n      });\n\n    let redirect = null;\n    if(this.props.token) {\n      redirect = <Redirect to='/about'/>\n    }\n\n    if(this.props.error) {\n\n    }\n\n    return (\n      <form onSubmit={this.handleFormConfirm}>\n        {inputs}\n        <button disabled={!this.state.valid} type='submit'>Войти</button>\n        {this.props.token}\n        {redirect}\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return  {\n    onAuth: (login, password) => dispatch(actions.auth(login, password))\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react'\n\nconst message = (props) => {\n\treturn (\n\t\t<p className=\"Me\">\n\t\t\t<i>{props.author}</i> \n\t\t\t{props.message}\n\t\t\t<img src={props.url} />\n\t\t</p>\n\t)\n};\n\nexport default message;","import React, { Component } from 'react';\nimport Message from './../../components/Message/Message';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\n\n\nclass MessageList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t    data: [],\n\t\t    user: 0\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tvar request = new Request('http://127.0.0.1:5000/search_users/', {\n\t\t    method: 'GET', \n\t\t    headers: {\n\t\t\t\t'Access-Control-Allow-Origin':'*'\n\t\t\t},\n\t\t});\n\n\t\tfetch(request)\n\t\t\t\t.then(function(response)  {\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then(data => this.setState({ data }))\n\n\n\n\n\t\tvar req = new Request('http://127.0.0.1:5000/logut/', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Access-Control-Allow-Origin':'*'\n\t\t\t},\n\t\t});\n\n\t\tconsole.log(req);\n\n\t\tfetch(req)\n\t\t\t.then(function(response)  {\n\t\t\t\t// if (!response.ok) {\n\t\t\t\t//     throw Error(response.statusText);\n\t\t\t\t// }\n\n\t\t\t\t// console.log(response)\n\t\t\t\t// var status = response.status();\n\t\t\t\t// if (status == 404) {\n\t\t\t\t// \treturn ;\n\t\t\t\t// }\n\t\t\t\t// console.log(response)\n\t\t\t\treturn response.json();\n\n\t\t\t})\n\t\t\t.then(data => this.props.currentUser(data, 'Charlie', true))\n\t\t\t// this.props.currentUser(9, 'Charlie', true);\n\n\n\n\n\t}\t\n\n\trender() {\n\t\tconsole.log(this.state.data);\n\n\t\t// var request = new Request('http://127.0.0.1:5000/search_users/', {\n\t\t//     method: 'GET', \n\t\t//     headers: {\n\t\t// \t\t'Access-Control-Allow-Origin':'*'\n\t\t// \t},\n\t\t// });\n\n\t\t// fetch(request)\n\t\t// \t\t.then(response => response.json())\n\t\t// \t\t.then(data => this.setState({ data }));\n\n\n\t\treturn(\n\t\t    <section id=\"messages-list\">\n\t\t        <p>\n\t\t            <i>Jack1</i> \n\t\t            Hello, friend!\n\t\t            {this.state.data.map(name => (name))}\n\t\t            9{this.props.usr.currentUser.userName}9\n\t\t        </p>\n\t\t       \n\t\t        <ul>\n\t\t            {this.props.msg.messages ? this.props.msg.messages.map(message => (\n\t\t                <Message\n\t\t                    key={message.id}\n\t\t                    {...message}\n\t\t                />\n\t\t        )) : console.log('jjh')}\n\t\t        </ul>\n\t\t    </section>\n\t\t);\n\t};\n}\n\nconst mapStateToProps = state => {\n  return {\n    msg: state.msg,\n    usr: state.usr\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return  {\n    currentUser: (userId, userName, isAuthorized) => dispatch(actions.currentUser(userId, userName, isAuthorized))\n\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);","import * as types from './actionTypes'\n\nlet nextUserId = 0\n\n\n\nexport const usersList = name => ({\n  type: types.USERS_LIST,\n  payload: {\n    id: nextUserId++,\n    name\n  }\n})\n\n\nexport const currentUser = (userId, userName, isAuthorized) => ({\n  type: types.CURRENT_USER,\n  payload: {\n    id: userId,\n\t  userName,\n\t  isAuthorized\n  }\n})","import React from 'react';\nimport classes from './Messageform.module.css';\n\nconst messageForm = (props) => {\n  let inputElement;\n  let inputElementClasses = [classes.InputElement];\n\n  return (\n    <section id=\"new-message\">\n      <input onChange={props.handleChange} onSubmit={props.handleSubmit} type=\"text\" value={props.value}/>\n\n      <button id=\"submit\" onClick={props.handleSubmit}>\n        <img alt=\"\" className=\"imgButton\" src=\"https://image.flaticon.com/icons/svg/87/87413.svg\"></img>\n      </button>\n      \n      <button>\n        <label htmlFor=\"attach\" className=\"imgButton\">\n          <img alt=\"\" className=\"imgButton\" src=\"https://image.flaticon.com/icons/svg/149/149827.svg\"></img>\n        </label>\n      </button>\n\n      <input type=\"file\" style={{display: 'none'}} onChange={props.handleFileUpload} id=\"attach\"/>\n\n      <button id=\"geoposition\" onClick={props.handleGeoposition}>\n        <img alt=\"\" className=\"imgButton\" src=\"https://image.flaticon.com/icons/svg/69/69433.svg\"></img>\n      </button>\n    </section>\n  );\n};\n\nexport default messageForm;","import React, { Component } from 'react';\nimport MessageForm from './../../components/Messageform/Messageform';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\n\nclass AddMessage extends Component {\n  state = {\n    value: ''\n  };\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({value: event.target.value}) \n  };\n\n\n\n  readFile(file) {\n    let fileReader = new FileReader();\n    //console.log(file);\n\n    return new Promise((resolve, reject) => {\n        fileReader.onload = e => {\n            let dataURI = e.target.result;\n            //console.log(dataURI);\n            resolve(dataURI);\n        }\n        fileReader.onerror = () => reject('Ошибка чтения файла');\n        fileReader.readAsDataURL(file); \n    })\n  }; \n\n\n\n  handleSubmit(event) {\n    console.log('submit');\n    event.preventDefault();\n    console.log(this.state.value);\n \n    if (this.state.value !== '') {\n      console.log(this.state.value);\n      this.props.AddMessage(this.state.value, 'Me', \"text\", null);\n      this.setState({value: ''});\n    }    \n  };\n\n  fileUpload(event) {\n    return new Promise((resolve, reject) => {\n      event.preventDefault();\n      let reader = new FileReader();\n      let file = event.target.files[0];\n      reader.readAsDataURL(file);\n\n      var now = new Date();\n      var time = now.toDateString();\n\n      var extension = file.name.split('.').pop().toLowerCase();\n      console.log('hhh');\n      if (extension === 'png' || extension === 'jpg') {\n        this.readFile(file).then( function(resultic) {\n          console.log('jpg');\n          console.log(resultic);\n          resolve(resultic); \n        });\n      }\n      else {\n        resolve(file.name);\n      }\n    })\n  };\n\n\n  handleFileUpload(event) {\n    this.fileUpload(event).then((result) => {\n      console.log(result);\n      if (result.length > 1000)\n        this.props.AddMessage('', 'Me', 'img', result);\n      else\n        this.props.AddMessage(result, 'Me', 'text', null);\n\n    });\n  };\n\n  geoposition() {\n    function error() {\n      alert('Error: Position hasn`t been detected');\n    };\n\n    function getPosition (opts) {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, error, opts);\n      });\n    };\n    return getPosition();\n  };\n\n\n  handleGeoposition() {\n    console.log('geo')\n    this.geoposition().then(result => {\n    console.log(result);\n    this.props.AddMessage('My latitude is ' + result.coords.latitude, 'Me', null, null)      \n  })};\n\n\n  render() {\n    return (\n      <MessageForm value={this.state.value} handleSubmit={(event) => this.handleSubmit(event)} \n                                      handleFileUpload={(event) => this.handleFileUpload(event)} \n                                      handleGeoposition={(event) => this.handleGeoposition(event)}\n                                      handleChange={(event) => this.handleChange(event)}/>\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return  {\n    AddMessage: (message, author, filename, url) => dispatch(actions.addMessage(message, author, filename, url))\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    \n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMessage);","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport ToDoContainer from './containers/ToDoContainer/ToDoContainer';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport MessageList from './containers/MessageList/MessageList';\nimport AddMessage from './containers/AddMessage/AddMessage';\n\n\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions';\n\nconst About = () => (\n  <div>AboutPage</div>\n);\n\nclass App extends Component {\n\n  render() {\n    let route =\n      (\n        <Switch>\n          <Route path='/about' exact component={About} />\n          <Route path='/login' exact component={Auth} />\n          <Redirect to='/about'></Redirect>\n        </Switch>\n      )\n  ;\n    if(this.props.token) {\n      route = (\n        <Switch>\n          <Route path='/task' component={ToDoContainer} />\n          <Route path='/login' exact component={Auth} />\n          <Route path='/about' exact component={About} />\n          <Redirect to='/about'></Redirect>\n        </Switch>\n      )\n    };\n    return (\n      <Router>\n        <Layout>\n          <MessageList/>\n          <AddMessage/>\n        </Layout>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return  {\n    checkToken: () => dispatch(actions.authCheckState())\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n};\n\nconst authStart = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n    error: null,\n  };\n};\n\nconst authSuccess = (state, action) => {\n  return {\n    ...state,\n    token: action.token,\n    error: null,\n    loading: false,\n  }\n};\n\nconst authFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START: return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n    case actionTypes.AUTH_FAILED: return authFail(state, action);\n    default: return state;\n  }\n};\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n\nconst initialState = {\n  messages: []\n};\n\nconst messages = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_MESSAGE':\n    case 'MESSAGE_RECEIVED':\n      return {\n        ...state, \n        messages: [...state.messages, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_MESSAGE: return messages(state, action);\n    case actionTypes.MESSAGE_RECEIVED: return messages(state, action);\n    default: return state;\n  }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n\nconst initialState = {\n  users: [],\n  currentUser: []\n};\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    \n    case 'USERS_LIST':\n      return {\n        ...state, \n        users: [...state.users, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst currentUser = (state = [], action) => {\n      \n  console.log('hjadh')\n  switch (action.type) {\n    case 'CURRENT_USER':\n      console.log('here')\n      return {\n        ...state, \n        currentUser: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USERS_LIST: return users(state, action);\n    case actionTypes.CURRENT_USER: return currentUser(state, action);\n    default: return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport authReducer from './store/reducers/auth';\nimport messageReducer from './store/reducers/message';\nimport usersReducer from './store/reducers/users';\n\n\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  msg: messageReducer,\n  usr: usersReducer \n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}